type Asset @model @auth(rules: [{allow: public}]) {
  id: ID!
  assetBarcode: String! @index(name: "byBarcode")
  status: AssetStatus!
  outletType: String!
  tapType: String!
  spareColumn: String
  wing: String
  buildingCode: String
  roomId: String
  floorNumber: Int
  floorName: String
  roomNumber: String
  roomName: String
  hasFilter: Boolean
  filterNeeded: Boolean
  filterExpiryDate: AWSDate
  filterInstalledDate: AWSDate
  maintenanceNotes: String
  inUse: Boolean
  createdAt: AWSDateTime!
  createdBy: String!
  modifiedAt: AWSDateTime!
  modifiedBy: String!
}

enum AssetStatus {
  ACTIVE
  INACTIVE
  MAINTENANCE
  DECOMMISSIONED
}

type AssetHistory @model @auth(rules: [{allow: public}]) {
  id: ID!
  assetId: ID! @index(name: "byAssetId")
  action: String!
  previousValue: AWSJSON
  newValue: AWSJSON
  changedBy: String!
  timestamp: AWSDateTime!
  notes: String
}

type MaintenanceRecord @model @auth(rules: [{allow: public}]) {
  id: ID!
  assetId: ID! @index(name: "byAssetId")
  maintenanceType: MaintenanceType!
  scheduledDate: AWSDate
  completedDate: AWSDate
  technician: String
  notes: String
  cost: Float
  status: MaintenanceStatus!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

enum MaintenanceType {
  FILTER_REPLACEMENT
  INSPECTION
  REPAIR
  CLEANING
  CALIBRATION
}

enum MaintenanceStatus {
  SCHEDULED
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

type Location @model @auth(rules: [{allow: public}]) {
  id: ID!
  wing: String!
  buildingCode: String!
  floorNumber: Int!
  floorName: String
  roomNumber: String!
  roomName: String
  roomId: String
  description: String
  assets: [Asset] @hasMany
} 